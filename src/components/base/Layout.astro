---
import BaseHead from './BaseHead.astro';
import BaseStyle from './BaseStyle.astro';

import Sidebar from './Sidebar.astro';

interface Props {
	class?: string;
	title: string;
	description: string;
	slug: string;
	showTitle: boolean;
}

const { class: className, title, description, slug, showTitle } = Astro.props;
---

<!doctype html>
<html lang="en">
	<BaseHead title={title} description={description} slug={slug} />
	<body>
		<BaseStyle />
		<Sidebar />
		<main class={className}>
			{showTitle && <h1 class="headerStyle">{title}</h1>}
			<slot />
		</main>
		<style is:global>
			html {
				background: var(--beige);
			}

			* {
				margin: 0;
				padding: 0;
				box-sizing: border-box;
			}

			main {
				padding-right: max(var(--padding), calc((100vw - 1600px) / 2 + var(--padding)));

				a {
					color: var(--black);
					word-break: break-word;
				}

				a:visited {
					color: var(--black);
				}

				a:hover {
					opacity: 0.6;
				}

				a:active {
					opacity: 0.8;
					text-decoration: underline;
				}

				> * {
					max-width: var(--main-width);
				}
			}

			body {
				border: 0;
				list-style: none;

				background: url('/bg_pattern.png');

				width: 100vw;
				min-height: 100vh;

				display: grid;
				grid-gap: var(--padding);
				grid-template-rows: auto 1fr;

				/* MOBILE-ONLY */
				--padding: var(--small-margin);
				grid-template-columns: 1fr;
				padding: var(--padding);
				padding-right: 0;
			}

			@media (min-width: 48rem) {
				body {
					--padding: var(--large-margin);
					grid-template-columns: calc(var(--sidebar-width) + var(--padding)) auto;
					height: 100vh;
					padding: 0;
					padding-left: max(calc((100vw - 1600px) / 2), 0px);
				}

				header {
					padding: var(--padding) 0 var(--padding) var(--padding);
				}

				main {
					padding-top: var(--padding);
					padding-bottom: var(--padding);
					height: 100vh;
					overflow-y: auto;
				}
			}
		</style>
	</body>
</html>
