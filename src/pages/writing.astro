---
import { WORK_SUBPATH } from '../consts';
import { Writing as strings } from '../strings';
import Layout from '../components/Layout.astro';
import Section from '../components/Section.astro';

import { getCollection } from 'astro:content';

const posts = await getCollection('works');

const mappedPosts = await Promise.all(
	posts.map(async p => {
		const work = { ...p.data, Content: (await p.render()).Content };
		if (!work.isSubpage) return work;

		const slug = work.title
			.toLowerCase()
			.replace(/\s/g, '-')
			.replace(/[^\w-]/g, '')
			.replace(/(-+)/g, '-');
		return { ...work, link: `${WORK_SUBPATH}/${slug}` };
	})
);

const groupedPosts = {
	fiction: mappedPosts.filter(p => p.category === 'Fiction'),
	poetry: mappedPosts.filter(p => p.category === 'Poetry'),
	theory: mappedPosts.filter(p => p.category === 'Theory and Criticism'),
	other: mappedPosts.filter(p => p.category === 'Other'),
};
---

<Layout title={strings.pageTitle} description={strings.description} slug={strings.slug}>
	<h1 class="headerStyle">{strings.title}</h1>
	{!!groupedPosts.poetry.length && <Section title={'Poetry'} works={groupedPosts.poetry} />}
	{!!groupedPosts.fiction.length && <Section title={'Fiction'} works={groupedPosts.fiction} />}
	{
		!!groupedPosts.theory.length && (
			<Section title={'Theory and Criticism'} works={groupedPosts.theory} />
		)
	}
	{!!groupedPosts.other.length && <Section title={'Other'} works={groupedPosts.other} />}
</Layout>

<style>
	.headerStyle {
		margin-bottom: 0.25rem;
		font: var(--normal-font);
		font-size: 1.75rem;
	}
</style>
