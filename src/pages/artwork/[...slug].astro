---
import Layout from '../../components/base/Layout.astro';
import { getCollection } from 'astro:content';
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
	const blogEntries = await getCollection('artwork');
	return blogEntries.map(entry => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}
// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props;
const { slug, data } = entry;
---

<Layout title={data.title} description={''} slug={slug} showTitle>
	<button popovertarget={`lightbox-${slug}`}>popover</button>
	<div class="popover-container" popover="auto" id={`lightbox-${slug}`}>
		<div class="lightbox-container">
			<div class="lightbox">
				<img src={data.image} />
				<div class="info">
					{data.title}
					{data.embed && <Fragment set:html={data.embed} />}
				</div>
			</div>
		</div>
	</div>
</Layout>

<style>
	.popover-container {
		inset: 0 max(calc((100vw - 1600px) / 2 + var(--padding)), var(--padding));
		margin: auto 0;

		width: calc(100vw - 2 * var(--padding));
		height: fit-content;Àù
		max-width: var(--max-body-width);

		background-color: transparent;
		border-width: 0;
	}

	.popover-container::backdrop {
		background-color: rgba(0, 0, 0, 0.8);
	}

	.lightbox-container {
		max-width: var(--max-body-width);

		display: grid;
		width: inherit;
		height: inherit;

		place-items: center;
	}

	.lightbox {
		display: grid;
		grid-template-columns: 1fr clamp(20rem, 100vw / 6, 1600px / 6);
		gap: 2rem;
	}

	img {
		display: block;

		place-self: center;
		object-fit: contain;
		object-position: left;
		max-height: calc(100vh - 2 * var(--padding));
		max-width: min(100%, 1280px);
	}

	.info {
		place-self: end start;
		padding-bottom: 1rem;

		font: var(--body-font);
		font-size: 1.75rem;
		letter-spacing: 0.02em;
		color: white;

		display: flex;
		flex-direction: column;
		gap: 1rem;
	}
</style>
